
io.h,1892
#define IO_HIO_H8,181
#define BUFFER_PLINE	BUFFER_PLINE11,215
#define BUFFER_GMSG	BUFFER_GMSG12,238
#define BUFFER_ATTDEF	BUFFER_ATTDEF13,260
    int (*wait_for_input)(int msec);wait_for_input21,466
    void (*screen_setup)(void);screen_setup26,571
    void (*screen_refresh)(void);screen_refresh28,632
    void (*screen_redraw)(void);screen_redraw30,713
    void (*draw_text)(int bufnum, const char *s);draw_text34,869
    void (*clear_text)(int bufnum);clear_text36,958
    void (*setup_fields)(void);setup_fields39,1032
    void (*draw_own_field)(void);draw_own_field41,1094
    void (*draw_other_field)(int player);draw_other_field43,1165
    void (*draw_status)(void);draw_status45,1251
    void (*draw_specials)(void);draw_specials47,1312
    void (*draw_attdef)(const char *type, int from, int to);draw_attdef49,1399
    void (*draw_gmsg_input)(const char *s, int pos);draw_gmsg_input51,1506
    void (*clear_gmsg_input)(void);clear_gmsg_input53,1606
    void (*setup_partyline)(void);setup_partyline56,1683
    void (*draw_partyline_input)(const char *s, int pos);draw_partyline_input58,1799
    void (*setup_winlist)(void);setup_winlist61,1896
} Interface;Interface63,1930
enum tattr {tattr71,2114
    TATTR_CBLACK,TATTR_CBLACK73,2211
    TATTR_CRED,TATTR_CRED74,2229
    TATTR_CGREEN,TATTR_CGREEN75,2245
    TATTR_CBROWN,TATTR_CBROWN76,2263
    TATTR_CBLUE,TATTR_CBLUE77,2281
    TATTR_CMAGENTA,TATTR_CMAGENTA78,2298
    TATTR_CCYAN,TATTR_CCYAN79,2318
    TATTR_CGREY,TATTR_CGREY80,2335
    TATTR_CXBRIGHT, /* | this with the colors above to get the bright variant. */TATTR_CXBRIGHT81,2352
    TATTR_CMAX = 16,TATTR_CMAX82,2434
    TATTR_BOLD,TATTR_BOLD84,2456
    TATTR_ITALIC,TATTR_ITALIC85,2472
    TATTR_UNDERLINE,TATTR_UNDERLINE86,2490
    TATTR_RESET,TATTR_RESET88,2512
    TATTR_MAXTATTR_MAX90,2530

Makefile,166
CC = ccCC4,47
CFLAGS = -O2 -I/usr/include/ncurses -g -Wall -fno-builtin-logCFLAGS7,87
IPV6 = 1IPV610,183
OBJS = sockets.o tetrinet.o tetris.o tty.oOBJS24,532

server.c,1585
static int linuxmode = 0;  /* 1: don't try to be compatible with Windows */linuxmode29,679
static int ipv6_only = 0;  /* 1: only use IPv6 (when available) */ipv6_only30,755
static int quit = 0;quit32,823
static int listen_sock = -1;listen_sock34,845
static int listen_sock6 = -1;listen_sock636,891
static int player_socks[6] = {-1,-1,-1,-1,-1,-1};player_socks38,928
static unsigned char player_ips[6][4];player_ips39,978
static int player_modes[6];player_modes40,1017
static int player_lost[6];player_lost43,1105
int xtoi(const char *buf)xtoi52,1390
static char *winlist_str()winlist_str73,1815
void read_config(void)read_config94,2354
void write_config(void)write_config183,4670
static void send_to(int player, const char *format, ...)send_to235,6048
static void send_to_all(const char *format, ...)send_to_all250,6424
static void send_to_all_but(int player, const char *format, ...)send_to_all_but268,6844
static void send_to_all_but_team(int player, const char *format, ...)send_to_all_but_team288,7330
static void add_points(int player, int points)add_points311,7998
static void add_game(int player)add_game349,9069
static void sort_winlist()sort_winlist372,9614
static void player_loses(int player)player_loses398,10289
static int server_parse(int player, char *buf)server_parse485,12679
static void sigcatcher(int sig)sigcatcher688,17862
static int init()init704,18245
decrypt_message(char *buf, char *newbuf, char *iphashbuf)decrypt_message811,20681
static void check_sockets()check_sockets829,21005
int main()main980,24775

server.h,31
#define SERVER_HSERVER_H2,17

sockets.c,418
static FILE *logfile;logfile21,398
static int lastchar = EOF;lastchar25,498
int sgetc(int s)sgetc27,526
int sungetc(int c, int s)sungetc43,725
char *sgets(char *buf, int len, int s)sgets54,979
int sputs(const char *str, int s)sputs87,1660
int sockprintf(int s, const char *fmt, ...)sockprintf116,2239
int conn(const char *host, int port, char ipbuf[4])conn129,2623
void disconn(int s)disconn199,4463

sockets.h,34
#define SOCKETS_HSOCKETS_H8,154

tetrinet.c,1972
int fancy = 0;		/* Fancy TTY graphics? */fancy23,501
int log = 0;		/* Log network traffic to file? */log24,543
char *logname;		/* Log filename */logname25,592
int windows_mode = 0;	/* Try to be just like the Windows version? */windows_mode26,627
int noslide = 0;	/* Disallow piece sliding? */noslide27,696
int tetrifast = 0;	/* TetriFast mode? */tetrifast28,743
int cast_shadow = 1;	/* Make pieces cast shadow? */cast_shadow29,784
int my_playernum = -1;	/* What player number are we? */my_playernum31,837
char *my_nick;		/* And what is our nick? */my_nick32,893
WinInfo winlist[MAXWINLIST];  /* Winners' list from server */winlist33,937
int server_sock;	/* Socket for server communication */server_sock34,999
int dispmode;		/* Current display mode */dispmode35,1054
char *players[6];	/* Player names (NULL for no such player) */players36,1096
char *teams[6];		/* Team names (NULL for not on a team) */teams37,1159
int playing_game;	/* Are we currently playing a game? */playing_game38,1218
int not_playing_game;	/* Are we currently watching people play a game? */not_playing_game39,1275
int game_paused;	/* Is the game currently paused? */game_paused40,1349
Interface *io;		/* Input/output routines */io42,1403
void msg_text(int bufnum, const unsigned char *s)msg_text54,1798
void parse(char *buf)parse113,2965
static char partyline_buffer[512];partyline_buffer463,11657
static int partyline_pos = 0;partyline_pos464,11692
#define curpos	curpos466,11723
void partyline_input(int c)partyline_input472,11897
void partyline_delete(void)partyline_delete485,12278
void partyline_backspace(void)partyline_backspace497,12601
void partyline_kill(void)partyline_kill509,12835
void partyline_move(int how)partyline_move522,13189
void partyline_enter(void)partyline_enter543,13846
#undef curposcurpos592,15876
void help()help597,16044
int init(int ac, char **av)init623,17172
int main(int ac, char **av)main743,20266

tetrinet.h,1263
#define TETRINET_HTETRINET_H8,154
#define FIELD_WIDTH	FIELD_WIDTH18,308
#define FIELD_HEIGHT	FIELD_HEIGHT19,331
typedef char Field[FIELD_HEIGHT][FIELD_WIDTH];Field20,355
    char name[32];name23,420
    int team;	/* 0 = individual player, 1 = team */team24,439
    int points;points25,491
    int games;	/* Number of games played */games26,507
} WinInfo;WinInfo27,551
#define MAXWINLIST	MAXWINLIST28,562
#define MAXSENDWINLIST	MAXSENDWINLIST29,614
#define MAXSAVEWINLIST	MAXSAVEWINLIST32,776
#define MODE_FIELDS	MODE_FIELDS40,1047
#define MODE_PARTYLINE	MODE_PARTYLINE41,1069
#define MODE_WINLIST	MODE_WINLIST42,1094
#define MODE_SETTINGS	MODE_SETTINGS43,1117
#define MODE_CLIENT	MODE_CLIENT44,1141
#define MODE_SERVER	MODE_SERVER45,1185
#define K_UP	K_UP51,1384
#define K_DOWN	K_DOWN52,1404
#define K_LEFT	K_LEFT53,1426
#define K_RIGHT	K_RIGHT54,1448
#define K_F1	K_F155,1471
#define K_F2	K_F256,1491
#define K_F3	K_F357,1511
#define K_F4	K_F458,1531
#define K_F5	K_F559,1551
#define K_F6	K_F660,1571
#define K_F7	K_F761,1591
#define K_F8	K_F862,1611
#define K_F9	K_F963,1631
#define K_F10	K_F1064,1651
#define K_F11	K_F1165,1672
#define K_F12	K_F1266,1693
#define K_INVALID	K_INVALID70,1815

tetris.c,3089
int piecefreq[7];	/* Frequency (percentage) for each block type */piecefreq18,358
int specialfreq[9];	/* Frequency for each special type */specialfreq19,425
int old_mode;		/* Old mode? (i.e. Gameboy-style) */old_mode20,483
int initial_level;	/* Initial level */initial_level21,535
int lines_per_level;	/* Number of lines per level-up */lines_per_level22,574
int level_inc;		/* Levels to increase at each level-up */level_inc23,630
int level_average;	/* Average all players' levels */level_average24,688
int special_lines;	/* Number of lines needed for a special block */special_lines25,741
int special_count;	/* Number of special blocks added each time */special_count26,809
int special_capacity;	/* Capacity of special block inventory */special_capacity27,875
Field fields[6];	/* Current field states */fields29,940
int levels[6];		/* Current levels */levels30,984
int lines;		/* Lines completed (by us) */lines31,1021
signed char specials[MAX_SPECIALS] = {-1}; /* Special block inventory */specials32,1063
int next_piece;		/* Next piece to fall */next_piece33,1136
static struct timeval timeout;	/* Time of next action */timeout35,1179
int current_piece;	/* Current piece number */current_piece36,1236
int current_rotation;	/* Current rotation value */current_rotation37,1282
int current_x;		/* Current X position */current_x38,1333
int current_y;		/* Current Y position */current_y39,1374
static int piece_waiting;	/* Are we waiting for a new piece to start? */piece_waiting40,1415
static int last_special;	/* Last line for which we added a special */last_special42,1489
static const char shapes[7][4][4][4] = {shapes63,2246
PieceData piecedata[7][4];piecedata101,3542
void init_shapes(void)init_shapes107,3705
int get_shape(int piece, int rotation, char buf[4][4])get_shape177,5617
static int level_delay()level_delay200,6215
static int piece_overlaps(int x, int y, int rot)piece_overlaps217,6709
static void draw_piece(int draw)draw_piece251,7479
static int clear_lines(int add_specials)clear_lines276,8157
static void place_specials(int num)place_specials345,9705
static void send_field(Field *oldfield)send_field388,10712
void new_piece(void)new_piece445,12272
void step_down(void)step_down496,13604
void do_special(const char *type, int from, int to)do_special557,15342
static char gmsg_buffer[512];gmsg_buffer729,19440
static int gmsg_pos;gmsg_pos730,19470
#define curpos	curpos732,19492
static void gmsg_input(int c)gmsg_input736,19608
static void gmsg_delete(void)gmsg_delete747,19893
static void gmsg_backspace(void)gmsg_backspace757,20137
static void gmsg_kill(void)gmsg_kill767,20311
static void gmsg_move(int how)gmsg_move776,20509
static void gmsg_enter(void)gmsg_enter795,21026
#undef curposcurpos808,21375
void new_game(void)new_game815,21573
int tetris_timeout(void)tetris_timeout836,22080
void tetris_timeout_action(void)tetris_timeout_action851,22407
static const char special_chars[] = "acnrsbgqo";special_chars863,22629
void tetris_input(int c)tetris_input865,22679

tetris.h,1253
#define TETRIS_HTETRIS_H8,167
#define PIECE_BAR	PIECE_BAR12,262
#define PIECE_SQUARE	PIECE_SQUARE13,301
#define PIECE_L_REVERSE	PIECE_L_REVERSE14,343
#define PIECE_L	PIECE_L15,392
#define PIECE_Z	PIECE_Z16,425
#define PIECE_S	PIECE_S17,458
#define PIECE_T	PIECE_T18,491
#define SPECIAL_A	SPECIAL_A20,525
#define SPECIAL_C	SPECIAL_C21,560
#define SPECIAL_N	SPECIAL_N22,597
#define SPECIAL_R	SPECIAL_R23,634
#define SPECIAL_S	SPECIAL_S24,680
#define SPECIAL_B	SPECIAL_B25,720
#define SPECIAL_G	SPECIAL_G26,767
#define SPECIAL_Q	SPECIAL_Q27,807
#define SPECIAL_O	SPECIAL_O28,844
#define MAX_SPECIALS	MAX_SPECIALS32,959
    int hot_x, hot_y;	/* Hotspot coordinates */hot_x47,1356
    int hot_x, hot_y;	/* Hotspot coordinates */hot_y47,1356
    int top, left;	/* Top-left coordinates relative to hotspot */top48,1404
    int top, left;	/* Top-left coordinates relative to hotspot */left48,1404
    int bottom, right;	/* Bottom-right coordinates relative to hotspot */bottom49,1470
    int bottom, right;	/* Bottom-right coordinates relative to hotspot */right49,1470
    char shape[4][4];	/* Shape data for the piece */shape50,1544
} PieceData;PieceData51,1597
PieceData piecedata[7][4];piecedata53,1611

tty.c,3761
#define MY_HLINE	MY_HLINE23,470
#define MY_VLINE	MY_VLINE24,513
#define MY_ULCORNER	MY_ULCORNER25,556
#define MY_URCORNER	MY_URCORNER26,605
#define MY_LLCORNER	MY_LLCORNER27,654
#define MY_LRCORNER	MY_LRCORNER28,703
#define MY_HLINE2	MY_HLINE230,753
#define MY_BOLD	MY_BOLD31,808
static int wait_for_input(int msec)wait_for_input41,1217
static int scrwidth, scrheight;scrwidth120,3501
static int scrwidth, scrheight;scrheight120,3501
static int has_color;has_color123,3560
    int x, y, width, height;x130,3698
    int x, y, width, height;y130,3698
    int x, y, width, height;width130,3698
    int x, y, width, height;height130,3698
    int line;line131,3727
    WINDOW *win;	/* NULL if not currently displayed */win132,3741
    char **text;text133,3796
} TextBuffer;TextBuffer134,3813
static TextBuffer plinebuf, gmsgbuf, attdefbuf;plinebuf136,3828
static TextBuffer plinebuf, gmsgbuf, attdefbuf;gmsgbuf136,3828
static TextBuffer plinebuf, gmsgbuf, attdefbuf;attdefbuf136,3828
static WINDOW *gmsg_inputwin;gmsg_inputwin142,4014
static int gmsg_inputpos, gmsg_inputheight;gmsg_inputpos143,4044
static int gmsg_inputpos, gmsg_inputheight;gmsg_inputheight143,4044
static void screen_cleanup()screen_cleanup150,4278
static void (*old_tstp)(int sig);old_tstp164,4628
static void sighandler(int sig)sighandler166,4663
#define MAXCOLORS	MAXCOLORS183,5047
static int colors[MAXCOLORS][2] = { {-1,-1} };colors185,5070
static long getcolor(int fg, int bg)getcolor189,5157
static void screen_setup(void)screen_setup222,5942
static void screen_refresh(void)screen_refresh274,7228
static void screen_redraw(void)screen_redraw292,7732
static void outline(TextBuffer *buf, const unsigned char *s)outline304,8091
static void draw_text(int bufnum, const char *s)draw_text356,9330
static void clear_text(int bufnum)clear_text411,10541
static void restore_text(TextBuffer *buf)restore_text441,11153
static void open_textwin(TextBuffer *buf)open_textwin452,11441
static void close_textwin(TextBuffer *buf)close_textwin476,12060
static int wide_screen = 0;wide_screen489,12446
static const int own_coord[2] = {1,0};own_coord492,12512
static int other_coord[5][2] =	/* Recomputed based on screen width */other_coord493,12551
static const int status_coord[2]     = {29,25};status_coord497,12709
static const int next_coord[2]       = {41,24};next_coord498,12757
static const int alt_status_coord[2] = {29,2};alt_status_coord499,12805
static const int alt_next_coord[2]   = {30,8};alt_next_coord500,12852
static const int attdef_coord[2] = {28,28};attdef_coord503,12947
static const int alt_attdef_coord[2] = {28,24};alt_attdef_coord504,12991
static const int field_text_coord[2] = {0,47};field_text_coord507,13101
static int tile_chars[15] =tile_chars511,13259
static int field_redraw = 0;field_redraw515,13400
static void setup_fields(void)setup_fields528,13810
static void draw_own_field(void)draw_own_field707,18882
static void draw_other_field(int player)draw_other_field774,20423
static void draw_status(void)draw_status808,21146
static const char *descs[] = {descs844,22243
static void draw_specials(void)draw_specials857,22557
static const char *msgs[][2] = {msgs887,23168
static void draw_attdef(const char *type, int from, int to)draw_attdef903,23618
static void draw_gmsg_input(const char *s, int pos)draw_gmsg_input929,24266
static void clear_gmsg_input(void)clear_gmsg_input987,25700
static void setup_partyline(void)setup_partyline1004,26187
static void draw_partyline_input(const char *s, int pos)draw_partyline_input1039,27001
static void setup_winlist(void)setup_winlist1070,27919
Interface tty_interface = {tty_interface1119,29245

version.h,86
#define TETRINET__VERSION_HTETRINET__VERSION_H8,161
#define VERSION VERSION10,190
